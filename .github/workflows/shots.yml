name: Take screenshots

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

permissions:
  contents: write

jobs:
  shot-scraper:
    runs-on: ubuntu-latest
    if: ${{ github.repository != 'simonw/shot-scraper-template' }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - uses: actions/cache@v3
        name: Configure pip caching
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache Playwright browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright/
          key: ${{ runner.os }}-browsers
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Install Playwright dependencies
        run: |
          shot-scraper install
      - uses: actions/github-script@v6
        name: Create shots.yml if missing on first run
        with:
          script: |
            const fs = require('fs');
            if (!fs.existsSync('shots.yml')) {
                const desc = context.payload.repository.description;
                let line = '';
                if (desc && (desc.startsWith('http://') || desc.startsWith('https://'))) {
                    line = `- url: ${desc}` + '\n  output: shot.png\n  height: 800';
                } else {
                    line = '# - url: https://www.example.com/\n#   output: shot.png\n#   height: 800';
                }
                fs.writeFileSync('shots.yml', line + '\n');
            }
      - name: Take shots
        run: |
          shot-scraper multi shots.yml
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          path: ./**.png
      - name: Rename files
        run: |-
          mv website.png personal-website/$(date '+%Y-%m-%d' | sed 's/-0\([0-9]\)-/-\1-/').png
          mv window.png window/$(date '+%Y-%m-%d' | sed 's/-0\([0-9]\)-/-\1-/').png
          mv fridge-poem.png fridge-poem/$(date '+%Y-%m-%d' | sed 's/-0\([0-9]\)-/-\1-/').png
      - name: Commit and push
        run: |-
          git config user.name "Automated"
          git config user.email "actions@users.noreply.github.com"
          git add -A
          timestamp=$(date -u)
          git commit -m "${timestamp}" || exit 0
          git pull --rebase
          git push
  archive:
    needs: shot-scraper
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: help
        run: |
          ls
      - id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1
      - name: website-archive
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_s3_bucket: ${{ secrets.AWS_BUCKET }}
          DESTINATION_DIR: spencerchang.me/website-${{ steps.date.outputs.date }}.png
          AWS_DEFAULT_REGION: us-east-1
          AWS_DEFAULT_OUTPUT: json
        run: |
          aws s3 cp website.png s3://$aws_s3_bucket/$DESTINATION_DIR
      - name: window-archive
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_s3_bucket: ${{ secrets.AWS_BUCKET }}
          DESTINATION_DIR: window.spencerchang.me/${{ steps.date.outputs.date }}.png
          AWS_DEFAULT_REGION: us-east-1
          AWS_DEFAULT_OUTPUT: json
        run: |
          aws s3 cp window.png s3://$aws_s3_bucket/$DESTINATION_DIR
      - name: fridge-poem-archive
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_s3_bucket: ${{ secrets.AWS_BUCKET }}
          DESTINATION_DIR: fridge-poem/${{ steps.date.outputs.date }}.png
          AWS_DEFAULT_REGION: us-east-1
          AWS_DEFAULT_OUTPUT: json
        run: |
          aws s3 cp fridge-poem.png s3://$aws_s3_bucket/$DESTINATION_DIR
